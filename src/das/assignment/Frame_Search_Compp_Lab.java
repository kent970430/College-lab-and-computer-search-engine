/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package das.assignment;

import static das.assignment.Frame_Search_Lab.isInteger;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class Frame_Search_Compp_Lab extends javax.swing.JFrame {

    String deviceID;
    String processor;
    String ram;
    String os;
    String version;
    String manufacturer;
    String system;

    /**
     * Creates new form Frame_Search_Compp_Lab
     */
    public Frame_Search_Compp_Lab() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        computertbl = new javax.swing.JTable();
        backbtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        showbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        labIDtxt = new javax.swing.JTextField();
        processortxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ramtxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ostxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        deviceIDtxt = new javax.swing.JTextField();
        levelllllllllllll = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        versiontxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        manufacturertxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        systemtxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        labbtxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        computertbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Computer ID", "Computer Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        computertbl.getTableHeader().setReorderingAllowed(false);
        computertbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computertblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(computertbl);

        backbtn.setText("Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        jLabel6.setText("Search Computer");

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        jLabel5.setText("Lab&Computer Searching Engine");

        showbtn.setText("Show");
        showbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showbtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Lab ID");

        processortxt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("RAM");

        ramtxt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Operating System(OS)");

        ostxt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Device ID");

        deviceIDtxt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        levelllllllllllll.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        levelllllllllllll.setText("Processor");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("OS Version");

        versiontxt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setText("OS Manufacturer");

        manufacturertxt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setText("System Type");

        systemtxt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel10.setText("Lab ID");

        labbtxt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(labIDtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(showbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(levelllllllllllll)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel10))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(labbtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                        .addComponent(manufacturertxt)
                                        .addComponent(versiontxt)
                                        .addComponent(ramtxt)
                                        .addComponent(processortxt)
                                        .addComponent(ostxt)
                                        .addComponent(deviceIDtxt, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(systemtxt, javax.swing.GroupLayout.Alignment.TRAILING)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(273, 273, 273)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(68, 68, 68)
                                    .addComponent(jLabel6))))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(labbtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(labIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(showbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(deviceIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(levelllllllllllll)
                            .addComponent(processortxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(ramtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ostxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(versiontxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(manufacturertxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(systemtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        Frame_Compp fc = new Frame_Compp();
        fc.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backbtnActionPerformed

    private void showbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showbtnActionPerformed
        // TODO add your handling code here:

        String line;
        String search_name = labIDtxt.getText();
        boolean inttt = isInteger(search_name);
        int flagg = 0;
        Pattern regex = Pattern.compile("[$&+,:;=\\\\?@#|/'<>.^*()%!-]");
        try {
            BufferedReader lab = new BufferedReader(new FileReader("Labs.txt"));
            while ((line = lab.readLine()) != null) {
                String[] labbs = line.split(",");
                String labid = labbs[0];

                if (labid.equals(search_name)) { //correct ID
                    flagg = 1;
                    break;
                } else if (regex.matcher(labIDtxt.getText()).find()) { //special char
                    flagg = 3;
                    break;
                } else if (inttt) { //integer
                    flagg = 4;
                    break;
                } else {
                    flagg = 2;
                }

            }
            switch (flagg) {
                case 1:
                    show_all_compp();
                    break;
                case 2:
                    if (labIDtxt.getText().length() >= 1) { //false
                        JOptionPane.showMessageDialog(null, "The lab does not exist", "Please try again", JOptionPane.ERROR_MESSAGE);
                        rst();
                    } else { //blank
                        JOptionPane.showMessageDialog(null, "Please key in the lab ID", "Please try again", JOptionPane.ERROR_MESSAGE);
                        rst();
                    }
                    break;
                case 3:
                    JOptionPane.showMessageDialog(null, "Search cannot contain special characters", "Please try again", JOptionPane.ERROR_MESSAGE);
                    rst();
                    break;
                case 4:
                    JOptionPane.showMessageDialog(null, "Please key in the lab ID in full name", "Please try again", JOptionPane.ERROR_MESSAGE);
                    rst();
                    break;
                default:
                    break;
            }
            lab.close();
        } catch (Exception e) {
            e.printStackTrace();

        }
    }//GEN-LAST:event_showbtnActionPerformed

    private void computertblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computertblMouseClicked
        String line;
        DefaultTableModel model = (DefaultTableModel) computertbl.getModel();
        int selectedRowIndex = computertbl.getSelectedRow();
        String nameee = labIDtxt.getText() + ".txt";

        deviceIDtxt.setText(model.getValueAt(selectedRowIndex, 0).toString());
        deviceIDtxt.setEnabled(false);
        labbtxt.setText(labIDtxt.getText());
        labbtxt.setEnabled(false);

        Computer compp = new Computer();
        compp.show_comp(nameee, deviceIDtxt.getText());
        processor = compp.getProcessor();
        ram = compp.getRam();
        os = compp.getOS();
        version = compp.getVersion();
        manufacturer = compp.getManufacturer();
        system = compp.getSystem();

        processortxt.setText(this.processor);
        processortxt.setEnabled(false);
        ramtxt.setText(this.ram);
        ramtxt.setEnabled(false);
        ostxt.setText(this.os);
        ostxt.setEnabled(false);
        versiontxt.setText(this.version);
        versiontxt.setEnabled(false);
        manufacturertxt.setText(this.manufacturer);
        manufacturertxt.setEnabled(false);
        systemtxt.setText(this.system);
        systemtxt.setEnabled(false);

    }//GEN-LAST:event_computertblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame_Search_Compp_Lab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame_Search_Compp_Lab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame_Search_Compp_Lab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame_Search_Compp_Lab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame_Search_Compp_Lab().setVisible(true);
            }
        });
    }

    public void show_all_compp() {
        String line;
        String nameee = labIDtxt.getText() + ".txt";
        DefaultTableModel table = new DefaultTableModel(new String[]{"Computer ID", "Status"}, 0);
        computertbl.setModel(table);
        Object[] row = new Object[2];
        table.setRowCount(0);
        try {
            BufferedReader compp = new BufferedReader(new FileReader(nameee));
            line = compp.readLine();
            while ((line = compp.readLine()) != null) {
                String[] field = line.split(",");
                row[0] = field[0];
                row[1] = field[1];
                table.addRow(row);
                //line = compp.readLine();
            }
        } catch (IOException e) {
            e.printStackTrace();

        }
    }

    public void rst() {
        DefaultTableModel dm = (DefaultTableModel) computertbl.getModel();
        while (dm.getRowCount() > 0) {
            dm.removeRow(0);
        }
        deviceIDtxt.setText(null);
        labIDtxt.setText(null);
        labbtxt.setText(null);
        processortxt.setText(null);
        ramtxt.setText(null);
        ostxt.setText(null);
        versiontxt.setText(null);
        manufacturertxt.setText(null);
        systemtxt.setText(null);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbtn;
    private javax.swing.JTable computertbl;
    private javax.swing.JTextField deviceIDtxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField labIDtxt;
    private javax.swing.JTextField labbtxt;
    private javax.swing.JLabel levelllllllllllll;
    private javax.swing.JTextField manufacturertxt;
    private javax.swing.JTextField ostxt;
    private javax.swing.JTextField processortxt;
    private javax.swing.JTextField ramtxt;
    private javax.swing.JButton showbtn;
    private javax.swing.JTextField systemtxt;
    private javax.swing.JTextField versiontxt;
    // End of variables declaration//GEN-END:variables
}
